colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
ylab("Test Method") +
xlab("Reference Method") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_low - 2), label = paste0("-2 SD", "\n", y_low), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_up + 2), label = paste0("+2 SD", "\n", y_up), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_mean + 2), label = paste0("+2 SD", "\n", y_mean), color="blue")
fig = ggplotly(p)
fig
y_low = round(mean(dt_BloodPressure$Dif, na.rm = TRUE) - sd(dt_BloodPressure$Dif) * 2, digits = 2)
y_up = round(mean(dt_BloodPressure$Dif, na.rm = TRUE) + sd(dt_BloodPressure$Dif) * 2, digits = 2)
y_mean =  round(mean(dt_BloodPressure$Dif, na.rm = TRUE), digits = 2)
p = ggplot(dt_BloodPressure, aes(x = reference, y = Dif)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = y_mean, colour = "blue", size = 0.5) +
geom_hline(yintercept = ( mean(dt_BloodPressure$Dif, na.rm = TRUE) - (sd(dt_BloodPressure$Dif) * 2) ),
colour = "red", size = 0.5, linetype="dashed") +
geom_hline(yintercept = ( mean(dt_BloodPressure$Dif, na.rm = TRUE) + (sd(dt_BloodPressure$Dif) * 2) ),
colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
ylab("Test Method") +
xlab("Reference Method") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_low - 2), label = paste0("-2 SD", "\n", y_low), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_up + 2), label = paste0("+2 SD", "\n", y_up), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_mean + 2), label = paste0("Mean", "\n", y_mean), color="blue")
fig = ggplotly(p)
fig
p = ggplot(dt_BloodPressure, aes(x = reference, y = Dif)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = y_mean, colour = "blue", size = 0.5) +
geom_hline(yintercept = ( mean(dt_BloodPressure$Dif, na.rm = TRUE) - (sd(dt_BloodPressure$Dif) * 2) ),
colour = "red", size = 0.5, linetype="dashed") +
geom_hline(yintercept = ( mean(dt_BloodPressure$Dif, na.rm = TRUE) + (sd(dt_BloodPressure$Dif) * 2) ),
colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
ylab("Test(y) - Reference(x)") +
xlab("Reference Method") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_low - 2), label = paste0("-2 SD", "\n", y_low), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_up + 2), label = paste0("+2 SD", "\n", y_up), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_mean + 2), label = paste0("Mean", "\n", y_mean), color="blue")
fig = ggplotly(p)
fig
p = ggplot(dt_BloodPressure, aes(x = reference, y = Dif)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = y_mean, colour = "blue", size = 0.5) +
geom_hline(yintercept = ( mean(dt_BloodPressure$Dif, na.rm = TRUE) - (sd(dt_BloodPressure$Dif) * 2) ),
colour = "red", size = 0.5, linetype="dashed") +
geom_hline(yintercept = ( mean(dt_BloodPressure$Dif, na.rm = TRUE) + (sd(dt_BloodPressure$Dif) * 2) ),
colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
ylab("Test(y) - Reference(x)") +
xlab("Reference Method") +
title("de")
p = ggplot(dt_BloodPressure, aes(x = reference, y = Dif)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = y_mean, colour = "blue", size = 0.5) +
geom_hline(yintercept = ( mean(dt_BloodPressure$Dif, na.rm = TRUE) - (sd(dt_BloodPressure$Dif) * 2) ),
colour = "red", size = 0.5, linetype="dashed") +
geom_hline(yintercept = ( mean(dt_BloodPressure$Dif, na.rm = TRUE) + (sd(dt_BloodPressure$Dif) * 2) ),
colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
ylab("Test(y) - Reference(x)") +
xlab("Reference Method") +
title("de") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_low - 2), label = paste0("-2 SD", "\n", y_low), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_up + 2), label = paste0("+2 SD", "\n", y_up), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_mean + 2), label = paste0("Mean", "\n", y_mean), color="blue")
p = ggplot(dt_BloodPressure, aes(x = reference, y = Dif)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = y_mean, colour = "blue", size = 0.5) +
geom_hline(yintercept = ( mean(dt_BloodPressure$Dif, na.rm = TRUE) - (sd(dt_BloodPressure$Dif) * 2) ),
colour = "red", size = 0.5, linetype="dashed") +
geom_hline(yintercept = ( mean(dt_BloodPressure$Dif, na.rm = TRUE) + (sd(dt_BloodPressure$Dif) * 2) ),
colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
labs(title="Difference Plot", x="Reference Method", y="Test(y) - Reference(x)")+
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_low - 2), label = paste0("-2 SD", "\n", y_low), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_up + 2), label = paste0("+2 SD", "\n", y_up), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_mean + 2), label = paste0("Mean", "\n", y_mean), color="blue")
fig = ggplotly(p)
fig
p = ggplot(dt_BloodPressure, aes(x = reference, y = dif)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = y_mean, colour = "blue", size = 0.5) +
geom_hline(yintercept = y_low,
colour = "red", size = 0.5, linetype="dashed") +
geom_hline(yintercept = y_up,
colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
labs(title="difference Plot", x="Reference Method", y="Test(y) - Reference(x)")+
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_low - 2), label = paste0("-2 SD", "\n", y_low), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_up + 2), label = paste0("+2 SD", "\n", y_up), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_mean + 2), label = paste0("Mean", "\n", y_mean), color="blue")
fig = ggplotly(p)
fig
y_low = round(mean(dt_BloodPressure$dif, na.rm = TRUE) - sd(dt_BloodPressure$dif) * 2, digits = 2)
y_up = round(mean(dt_BloodPressure$dif, na.rm = TRUE) + sd(dt_BloodPressure$dif) * 2, digits = 2)
y_mean =  round(mean(dt_BloodPressure$dif, na.rm = TRUE), digits = 2)
p = ggplot(dt_BloodPressure, aes(x = reference, y = dif)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = y_mean, colour = "blue", size = 0.5) +
geom_hline(yintercept = y_low,
colour = "red", size = 0.5, linetype="dashed") +
geom_hline(yintercept = y_up,
colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
labs(title="difference Plot", x="Reference Method", y="Test(y) - Reference(x)")+
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_low - 2), label = paste0("-2 SD", "\n", y_low), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_up + 2), label = paste0("+2 SD", "\n", y_up), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_mean + 2), label = paste0("Mean", "\n", y_mean), color="blue")
fig = ggplotly(p)
fig
dt_BloodPressure$dif <- dt_BloodPressure$test_1 - dt_BloodPressure$reference
dt_BloodPressure$dif <- dt_BloodPressure$test_1 - dt_BloodPressure$reference
y_low = round(mean(dt_BloodPressure$dif, na.rm = TRUE) - sd(dt_BloodPressure$dif) * 2, digits = 2)
y_up = round(mean(dt_BloodPressure$dif, na.rm = TRUE) + sd(dt_BloodPressure$dif) * 2, digits = 2)
y_mean =  round(mean(dt_BloodPressure$dif, na.rm = TRUE), digits = 2)
p = ggplot(dt_BloodPressure, aes(x = reference, y = dif)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = y_mean, colour = "blue", size = 0.5) +
geom_hline(yintercept = y_low,
colour = "red", size = 0.5, linetype="dashed") +
geom_hline(yintercept = y_up,
colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
labs(title="difference Plot", x="Reference Method", y="Test(y) - Reference(x)")+
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_low - 2), label = paste0("-2 SD", "\n", y_low), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_up + 2), label = paste0("+2 SD", "\n", y_up), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_mean + 2), label = paste0("Mean", "\n", y_mean), color="blue")
fig = ggplotly(p)
fig
runApp()
runApp()
runApp()
2/17
y_low = round(mean(dt_BloodPressure$dif, na.rm = TRUE) - sd(dt_BloodPressure$dif) * 2, digits = 2)
y_low
y_low = round(mean(dt_BloodPressure$dif, na.rm = TRUE) - sd(dt_BloodPressure$dif) * 2, digits = 2)
dt_BloodPressure$dif <- dt_BloodPressure$test_1 - dt_BloodPressure$reference
y_low = round(mean(dt_BloodPressure$dif, na.rm = TRUE) - sd(dt_BloodPressure$dif) * 2, digits = 2)
y_up = round(mean(dt_BloodPressure$dif, na.rm = TRUE) + sd(dt_BloodPressure$dif) * 2, digits = 2)
y_mean =  round(mean(dt_BloodPressure$dif, na.rm = TRUE), digits = 2)
y_low
y_low * .11
y_low = round(mean(dt_BloodPressure$dif, na.rm = TRUE) - sd(dt_BloodPressure$dif) * 2, digits = 2)
y_up = round(mean(dt_BloodPressure$dif, na.rm = TRUE) + sd(dt_BloodPressure$dif) * 2, digits = 2)
y_mean =  round(mean(dt_BloodPressure$dif, na.rm = TRUE), digits = 2)
p = ggplot(dt_BloodPressure, aes(x = reference, y = dif)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = y_mean, colour = "blue", size = 0.5) +
geom_hline(yintercept = y_low,
colour = "red", size = 0.5, linetype="dashed") +
geom_hline(yintercept = y_up,
colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
labs(title="Difference Plot", x="Reference Method", y="Test(y) - Reference(x)")+
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_low - (y_low * .11)), label = paste0("-2 SD", "\n", y_low), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_up + 2), label = paste0("+2 SD", "\n", y_up), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_mean + 2), label = paste0("Mean", "\n", y_mean), color="blue")
fig = ggplotly(p)
fig
p = ggplot(dt_BloodPressure, aes(x = reference, y = dif)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = y_mean, colour = "blue", size = 0.5) +
geom_hline(yintercept = y_low,
colour = "red", size = 0.5, linetype="dashed") +
geom_hline(yintercept = y_up,
colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
labs(title="Difference Plot", x="Reference Method", y="Test(y) - Reference(x)")+
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_low - (y_low * .11)), label = paste0("-2 SD", "\n", y_low), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_up + (y_up * .11)), label = paste0("+2 SD", "\n", y_up), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_mean + (y_mean * .11)), label = paste0("Mean", "\n", y_mean), color="blue")
fig = ggplotly(p)
fig
y_mean
2 / y_mean
1.6 * 100
p = ggplot(dt_BloodPressure, aes(x = reference, y = dif)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = y_mean, colour = "blue", size = 0.5) +
geom_hline(yintercept = y_low,
colour = "red", size = 0.5, linetype="dashed") +
geom_hline(yintercept = y_up,
colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
labs(title="Difference Plot", x="Reference Method", y="Test(y) - Reference(x)")+
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_low - (y_low * .11)), label = paste0("-2 SD", "\n", y_low), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_up + (y_up * .11)), label = paste0("+2 SD", "\n", y_up), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_mean + (y_mean * .50)), label = paste0("Mean", "\n", y_mean), color="blue")
fig = ggplotly(p)
fig
y_mean
p = ggplot(dt_BloodPressure, aes(x = reference, y = dif)) +
geom_point(alpha = 0.5) +
geom_hline(yintercept = y_mean, colour = "blue", size = 0.5) +
geom_hline(yintercept = y_low,
colour = "red", size = 0.5, linetype="dashed") +
geom_hline(yintercept = y_up,
colour = "red", size = 0.5, linetype="dashed") +
theme_bw(base_size = 12) +
labs(title="Difference Plot", x="Reference Method", y="Test(y) - Reference(x)")+
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_low - (y_low * .11)), label = paste0("-2 SD", "\n", y_low), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_up + (y_up * .11)), label = paste0("+2 SD", "\n", y_up), color="red") +
annotate("text", x = (max(dt_BloodPressure$reference) + 5),
y = (y_mean + (y_mean * 1.60)), label = paste0("Mean", "\n", y_mean), color="blue")
fig = ggplotly(p)
fig
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(purrr)
map_if(dt_BloodPressure, is.numeric, as.character)
str(dt_BloodPressure)
dt_BloodPressure = map_if(dt_BloodPressure, is.numeric, as.character)
str(dt_BloodPressure)
runApp()
str(dt_BloodPressure)
runApp()
runApp()
runApp()
map_if(df_for_models, is.numeric, as.character)
df_for_models = purrr::map_if(df_for_models, is.numeric,
as.character)
runApp()
str(df_for_models)
str(dt_BloodPressure)
dt_BloodPressure
dt_BloodPressure = map_if(dt_BloodPressure, is.numeric, as.character)
str(dt_BloodPressure)
dt_BloodPressure
# Load data
dt_BloodPressure = data.table::fread("./Data/df_SystBloodPressure.csv")
dt_Plasma = data.table::fread("./Data/df_PlasmaVolume.csv")
names(dt_Plasma) = c("subject", "reference", "test_1")
dt_t4 = data.table::fread("./Data/df_T4.csv")
# Global reference
dt_BloodPressure <<- dt_BloodPressure
dt_Plasma <<- dt_Plasma
dt_t4 <<- dt_t4
# List example data
data_list = sort(c("BloodPressure", "T4", "Plasma"))
map_df(dt_BloodPressure, is.numeric, as.character)
map_df(dt_BloodPressure, as.character)
map_df(dt_BloodPressure, as.character) %>% data.table()
dt_BloodPressure = map_df(dt_BloodPressure, as.character) %>% data.table()
str(dt_BloodPressure)
dt_BloodPressure = map_df(dt_BloodPressure, as.character)
str(dt_BloodPressure)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
####
dt_BloodPressure
dt_BloodPressure
column_names = names(dt_BloodPressure)
cols_choice_method = sort(column_names[grepl("test", column_names)])
methods = c("LinReg", "WLinReg", "Deming", "WDeming", "PaBa")
slopes = c()
models = c()
intercepts = c()
test_methods = c()
for (test_method in cols_choice_method) {
for (method in methods) {
print(paste0(test_method, method))
x = dt_BloodPressure$reference
y = dt_BloodPressure %>% dplyr::select(!!test_method) %>% pull()
model = mcr::mcreg(x, y, method.reg=method, mref.name="Reference",
mtest.name="Test", na.rm=TRUE)
test_methods = c(test_methods, test_method)
slopes = c(slopes, mcr::getCoefficients(model)[2])
intercepts = c(intercepts, mcr::getCoefficients(model)[1])
models = c(models, method)
}
}
df_for_models = data.frame(test_method = test_methods,
slope = slopes,
intercept = intercepts,
model = models)
df_for_models
df_for_models = data.table(test_method = test_methods,
slope = slopes,
intercept = intercepts,
model = models)
df_for_models
df_for_models[, model := model := switch(model,
"LinReg" = "Ordinary Least Square",
"WLinReg" = "Weighted Ordinary Least Square",
"Deming" = "Deming",
"WDeming" = "Weighted Deming",
"Passing-Bablok")]
df_for_models[, model := switch(model,
"LinReg" = "Ordinary Least Square",
"WLinReg" = "Weighted Ordinary Least Square",
"Deming" = "Deming",
"WDeming" = "Weighted Deming",
"Passing-Bablok")]
df_for_models[, model := switch(model,
"LinReg" = "Ordinary Least Square",
"WLinReg" = "Weighted Ordinary Least Square",
"Deming" = "Deming",
"WDeming" = "Weighted Deming",
"Passing-Bablok")]
df_for_models[, model := switch(model,
"LinReg" = "Ordinary Least Square",
"WLinReg" = "Weighted Ordinary Least Square",
"Deming" = "Deming",
"WDeming" = "Weighted Deming",
"Passing-Bablok")]
df_for_models[, model := switch(model,
"LinReg" = "Ordinary Least Square",
"WLinReg" = "Weighted Ordinary Least Square",
"Deming" = "Deming",
"WDeming" = "Weighted Deming",
"Passing-Bablok")]
df_for_models$model = switch(df_for_models$model,
"LinReg" = "Ordinary Least Square",
"WLinReg" = "Weighted Ordinary Least Square",
"Deming" = "Deming",
"WDeming" = "Weighted Deming",
"Passing-Bablok")
df_for_models$model
switch(df_for_models$model,
"LinReg" = "Ordinary Least Square",
"WLinReg" = "Weighted Ordinary Least Square",
"Deming" = "Deming",
"WDeming" = "Weighted Deming",
"Passing-Bablok")
models = switch(models,
"LinReg" = "Ordinary Least Square",
"WLinReg" = "Weighted Ordinary Least Square",
"Deming" = "Deming",
"WDeming" = "Weighted Deming",
"Passing-Bablok")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
####
library(rsconnect)
#devtools::check()
setwd("D:/OneDrive - Universitat Oberta de Catalunya/Master_UoC/TFM/multi_method_comparison/")
rsconnect::setAccountInfo(name='jasam',
token='3BE3FE71B970ECBCF03126DDDE5A431F',
secret='GHpN4FLFEZYukqMuWytujwX+8HJ+7t/Q0z9Jrm7r')
rsconnect::deployApp()
path = "D:/OneDrive - Universitat Oberta de Catalunya/Master_UoC/TFM/ejemplos/dt_blood.csv"
path = "D:/OneDrive - Universitat Oberta de Catalunya/Master_UoC/TFM/ejemplos/dt_blood.csv"
data.table::fwrite(dt_BloodPressure, path)
install.packages("flexdashboard")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
#devtools::check()
setwd("D:/OneDrive - Universitat Oberta de Catalunya/Master_UoC/TFM/multi_method_comparison/")
rsconnect::setAccountInfo(name='jasam',
token='3BE3FE71B970ECBCF03126DDDE5A431F',
secret='GHpN4FLFEZYukqMuWytujwX+8HJ+7t/Q0z9Jrm7r')
rsconnect::deployApp()
#devtools::check()
setwd("D:/OneDrive - Universitat Oberta de Catalunya/Master_UoC/TFM/multi_method_comparison/")
rsconnect::setAccountInfo(name='jasam',
token='3BE3FE71B970ECBCF03126DDDE5A431F',
secret='GHpN4FLFEZYukqMuWytujwX+8HJ+7t/Q0z9Jrm7r')
rsconnect::deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(df_for_models)
str()df_models)
str(df_for_models)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
#devtools::check()
setwd("D:/OneDrive - Universitat Oberta de Catalunya/Master_UoC/TFM/multi_method_comparison/")
rsconnect::setAccountInfo(name='jasam',
token='3BE3FE71B970ECBCF03126DDDE5A431F',
secret='GHpN4FLFEZYukqMuWytujwX+8HJ+7t/Q0z9Jrm7r')
rsconnect::deployApp()
